version: '3.9'

services:
  redis:
    image: redis:alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:?err}
    networks:
      - redis
    ports:
      - "${REDIS_EXTERNAL_PORT}:${REDIS_PORT}"
    volumes:
      - redis:/data

  postgres:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - db
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres:/var/lib/postgresql/data

  web:
    build: .
    restart: always
    env_file:
      - .env
    entrypoint: ./web-runner.sh
    networks:
      - db
      - backend
      - redis
    expose:
      - '8000'
    volumes:
      - static:/app/static
      - media:/app/media
    depends_on:
      - redis
      - postgres

  nginx:
    image: nginx:alpine
    restart: on-failure
    env_file:
      - .env
    networks:
      - backend
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/app/static
      - media:/app/media
    depends_on:
      - web

networks:
  redis:
  db:
  backend:

volumes:
  redis:
  postgres:
  static:
  media:
